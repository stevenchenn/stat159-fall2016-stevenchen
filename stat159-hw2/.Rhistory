x = c(1,2,3,4,5,6,7,8,9,10)
y = c(1,2,3,4,5,6,7,8,9,10)
plot(x,y)
ggplot(aes(x=x, y=y))
library(ggplot)
library(ggplot2)
install.packages(ggplot2)
install.packages("ggplot2")
ggplot(aes(x=x, y=y))
library(ggplot2)
ggplot(aes(x=x, y=y))
?ggplot
ggplot(data.frame(x=x, y=y), aes(x=x, y=y))
ggplot(data.frame(x=x, y=y), aes(x=x, y=y)) + scatter()
ggplot(data.frame(x=x, y=y), aes(x=x, y=y)) + geom_point()
n=100
n = 100
beta0 = 32
beta1 = 0.5
x = seq(59,76,length.out=100)
M = 10000
y = matrix(ncol=M, nrow=100)
normal = function(x){
res = rnorm(1, beta0 + beta1*x, 25)
return(res)
}
t = function(x){
res = beta0 + beta1*x + 10*rt(1,3)
return(res)
}
uniform = function(x){
res = beta0 + beta1*x + runif(1, min=-8, max=8)
return(res)
}
normal_index = x <= 65
t_index = x <= 70 & x > 65
uniform_index = x > 70
for(j in 1:2){
#y[,j][normal_index] =
print(lapply(x[normal_index], normal))
#y[,j][t_index] = lapply(x[t_index], t)
#y[,j][uniform_index] = lapply(x[uniform_index], uniform)
}
for(j in 1:2){
#y[,j][normal_index] =
print(sapply(x[normal_index], normal))
#y[,j][t_index] = lapply(x[t_index], t)
#y[,j][uniform_index] = lapply(x[uniform_index], uniform)
}
for(j in 1:2){
y[,j][normal_index] = sapply(x[normal_index], normal)
y[,j][t_index] = sapply(x[t_index], t)
y[,j][uniform_index] = sapply(x[uniform_index], uniform)
}
for(j in 1:M){
y[,j][normal_index] = sapply(x[normal_index], normal)
y[,j][t_index] = sapply(x[t_index], t)
y[,j][uniform_index] = sapply(x[uniform_index], uniform)
}
View(y)
beta0_vector = matrix(ncol = 1, nrow = M)
beta1_vector = matrix(ncol = 1, nrow = M)
View(beta0_vector)
c(1,1)
beta_vector = matrix(ncol = 2, nrow = M)
betas = function(x, y){
b1 = sum((x - mean(x)) * (y - mean(y)))/sum((x - mean(x))^2)
b0 = mean(y) - b1 * mean(x)
return(c(b0,b1))
}
for(j in 1:M){
beta_vector[j,] = betas(x, y[,j])
}
View(betas)
View(beta_vector)
beta0
beta0*5
c(beta0*4)
c(beta0,4)
rep(beta0, 5)
beta0s = rep(beta0, M)
beta1s = rep(beta1, M)
sum(beta_vector[0] - beta0s)/M
sum(beta_vector[0] - beta0s)
beta_vector[0]
sum(beta_vector[1] - beta0s)
sum(beta_vector[1] - beta0s)/M
sum(beta_vector[2] - beta1s)/M
beta1_vector
beta_vector[1]
beta_vector[,1]
beta_vector[,2]
sum(beta_vector[2] - beta1s)/M
sum(beta_vector[2] - beta1s)/M
sum(beta_vector[1] - beta0s)/M
beta1s
beta_vector[2]
sum(beta_vector[2,] - beta1s)/M
sum(beta_vector[1,] - beta0s)/M
beta_vector[,2] - beta1s
sum(beta_vector[,2] - beta1s)/M
sum(beta_vector[,1] - beta0s)/M
lm(y[,1] ~ x)
summary(lm(y[,1] ~ x))
beta_vector[1]
beta_vector[1,]
rt(1,3)
rt(1,3)
rt(1,3)
rt(1,3)
sum(rt(100,3))/100
sum(rt(M,3))/M
sum(rt(1000000,3))/1000000
sum(beta_vector[,1] - beta0s)/M
sum(beta_vector[,2] - beta1s)/M
sd
sd(beta_vector[,1])
beta_vector[,1]
sd(beta_vector[,2])
y[,1]
lm(y[,1] ~ x)
lmdl = lm(y[,1] ~ x)
summary(lmdl)[, 2]
summary(lmdl)
sd_beta0 = sd(beta_vector[,1])
sd_beta1 = sd(beta_vector[,2])
sd_beta0
sd_beta1
coef(summary(lmdl))
coef(summary(lmdl))[,2]
print(coef(summary(lmdl))[,2])
print(coef(summary(lmdl))[,2][1])
stderrs = coef(summary(lmdl))[,2]
print(coef(summary(lmdl))[,2][
)
stderrs
stderr = function(y, x){
lmdl = lm(y ~ x)
stderrs = coef(summary(lmdl))[,2]
return(stderrs)
}
stderr_vector = matrix(ncol = 2, nrow = M)
for(j in 1:M){
stderr_vector[j,] = stderr(x, y[,j])
}
stderrs
stderr_vector
stderr_vector[5001]
stderr_vector[5001,]
stderr_vector[5000,]
hist(stderr_vector[,1])
hist(stderr_vector[,2])
hist(stderr_vector[,1])
sd_beta0 = sd(beta_vector[,1])
sd_beta1 = sd(beta_vector[,2])
sd_beta0
sd_beta1
hist(stderr_vector[,1])
hist(stderr_vector[,2])
mean(beta_vector[,1])
mean(beta_vector[,2])
stderr_vector[,1]
mean(stderr_vector[,2])
sd_beta1
mean(beta_vector[,2])
###Problem 7
n = 100
beta0 = 32
beta1 = 0.5
x = seq(59,76,length.out=100)
M = 10000
y = matrix(ncol=M, nrow=100)
normal = function(x){
res = rnorm(1, beta0 + beta1*x, 5)
return(res)
}
t = function(x){
res = beta0 + beta1*x + 10*rt(1,3)
return(res)
}
uniform = function(x){
res = beta0 + beta1*x + runif(1, min=-8, max=8)
return(res)
}
normal_index = x <= 65
t_index = x <= 70 & x > 65
uniform_index = x > 70
for(j in 1:M){
y[,j][normal_index] = sapply(x[normal_index], normal)
y[,j][t_index] = sapply(x[t_index], t)
y[,j][uniform_index] = sapply(x[uniform_index], uniform)
}
beta_vector = matrix(ncol = 2, nrow = M)
betas = function(x, y){
b1 = sum((x - mean(x)) * (y - mean(y)))/sum((x - mean(x))^2)
b0 = mean(y) - b1 * mean(x)
return(c(b0,b1))
}
for(j in 1:M){
beta_vector[j,] = betas(x, y[,j])
}
beta0s = rep(beta0, M)
beta1s = rep(beta1, M)
sum(beta_vector[,1] - beta0s)/M
sum(beta_vector[,2] - beta1s)/M
sd_beta0 = sd(beta_vector[,1])
sd_beta1 = sd(beta_vector[,2])
stderr = function(y, x){
lmdl = lm(y ~ x)
stderrs = coef(summary(lmdl))[,2]
return(stderrs)
}
stderr_vector = matrix(ncol = 2, nrow = M)
for(j in 1:M){
stderr_vector[j,] = stderr(x, y[,j])
}
sd_beta0
sd_beta1
mean(stderr_vector[,1]
)
mean(stderr_vector[,2]
)
mean(beta_vector[,2])
mean(beta_vector[,1])
hist(stderr_vector[,1])
hist(stderr_vector[,2])
hist(stderr_vector[,2], title("Histogram for Beta1 S.E."))
hist(stderr_vector[,1], title("Histogram for Beta0 S.E."))
hist(stderr_vector[,1], title("Histogram for Beta0 S.E."))
plot.new
plot.new()
hist(stderr_vector[,1], title("Histogram for Beta0 S.E."))
n = 100
beta0 = 32
beta1 = 0.5
x = seq(59,76,length.out=100)
M = 10000
y = matrix(ncol=M, nrow=100)
normal = function(x){
res = rnorm(1, beta0 + beta1*x, 5)
return(res)
}
t = function(x){
res = beta0 + beta1*x + 10*rt(1,3)
return(res)
}
uniform = function(x){
res = beta0 + beta1*x + runif(1, min=-8, max=8)
return(res)
}
normal_index = x <= 65
t_index = x <= 70 & x > 65
uniform_index = x > 70
for(j in 1:M){
y[,j][normal_index] = sapply(x[normal_index], normal)
y[,j][t_index] = sapply(x[t_index], t)
y[,j][uniform_index] = sapply(x[uniform_index], uniform)
}
beta_vector = matrix(ncol = 2, nrow = M)
betas = function(x, y){
b1 = sum((x - mean(x)) * (y - mean(y)))/sum((x - mean(x))^2)
b0 = mean(y) - b1 * mean(x)
return(c(b0,b1))
}
for(j in 1:M){
beta_vector[j,] = betas(x, y[,j])
}
beta0s = rep(beta0, M)
beta1s = rep(beta1, M)
sum(beta_vector[,1] - beta0s)/M
sum(beta_vector[,2] - beta1s)/M
sd_beta0 = sd(beta_vector[,1])
sd_beta1 = sd(beta_vector[,2])
stderr = function(y, x){
lmdl = lm(y ~ x)
stderrs = coef(summary(lmdl))[,2]
return(stderrs)
}
stderr_vector = matrix(ncol = 2, nrow = M)
for(j in 1:M){
stderr_vector[j,] = stderr(x, y[,j])
}
hist(stderr_vector[,1], title("Histogram for Beta0 S.E."))
plot.new()
hist(stderr_vector[,1], title("Histogram for Beta0 S.E."))
hist(stderr_vector[,1])
hist(stderr_vector[,1], title="Histogram for Beta0 S.E.")
hist(stderr_vector[,1], main="Histogram for Beta0 S.E.")
hist(stderr_vector[,2], main="Histogram for Beta1 S.E.")
hist(stderr_vector[,1], main="Histogram for Beta0 S.E.")
hist(stderr_vector[,2], main="Histogram for Beta1 S.E.")
mean(stderr_vector[,1])
hist(stderr_vector[,1], main="Histogram for Beta0 S.E.")
mean(stderr_vector[,2])
hist(stderr_vector[,2], main="Histogram for Beta1 S.E.")
mean(beta_vector[,1])
lm(y[,1]~ x)
summary(lm(y[,1]~ x))
summary(lm(y[,2]~ x))
summary(lm(y[,3]~ x))
sd_beta0
summary(lm(y[,4]~ x))
sd_beta1
coef(summary(lm(y[,4]~ x)))[,2]
hist(stderr_vector[,1], main="Histogram for Beta0 S.E.")
stderr = function(x, y){
lmdl = lm(y ~ x)
stderrs = coef(summary(lmdl))[,2]
return(stderrs)
}
stderr_vector = matrix(ncol = 2, nrow = M)
for(j in 1:M){
stderr_vector[j,] = stderr(x, y[,j])
}
hist(stderr_vector[,1], main="Histogram for Beta0 S.E.")
hist(stderr_vector[,2], main="Histogram for Beta1 S.E.")
hist(stderr_vector[,1], main="Histogram for Beta0 S.E.")
hist(stderr_vector[,1], main="Histogram for Beta0 S.E.", xlim=c(min(stderr_vector[,1])))
hist(stderr_vector[,1], main="Histogram for Beta0 S.E.", xlim=c(0,max(stderr_vector[,1])*1.1))
max(stderr_vector[,1])
length(stderr_vector[,1])
hist(stderr_vector[,1], main="Histogram for Beta0 S.E.", xlim=c(0,50))
hist(stderr_vector[,2], main="Histogram for Beta1 S.E.")
hist(stderr_vector[,2], main="Histogram for Beta1 S.E.", xlim=c(0,1))
n = 100
beta0 = 32
beta1 = 0.5
x = seq(59,76,length.out=100)
M = 10000
y = matrix(ncol=M, nrow=100)
normal = function(x){
res = rnorm(1, beta0 + beta1*x, 5)
return(res)
}
t = function(x){
res = beta0 + beta1*x + 10*rt(1,3)
return(res)
}
uniform = function(x){
res = beta0 + beta1*x + runif(1, min=-8, max=8)
return(res)
}
normal_index = x <= 65
t_index = x <= 70 & x > 65
uniform_index = x > 70
for(j in 1:M){
y[,j][normal_index] = sapply(x[normal_index], normal)
y[,j][t_index] = sapply(x[t_index], t)
y[,j][uniform_index] = sapply(x[uniform_index], uniform)
}
beta_vector = matrix(ncol = 2, nrow = M)
betas = function(x, y){
b1 = sum((x - mean(x)) * (y - mean(y)))/sum((x - mean(x))^2)
b0 = mean(y) - b1 * mean(x)
return(c(b0,b1))
}
for(j in 1:M){
beta_vector[j,] = betas(x, y[,j])
}
beta0s = rep(beta0, M)
beta1s = rep(beta1, M)
c(sum(beta_vector[,1] - beta0s)/M, sum(beta_vector[,2] - beta1s)/M)
c("Beta0 SD:", sd_beta0, "Beta1 SD:", sd_beta1)
hist(stderr_vector[,1], main="Histogram for Beta0 S.E.", xlim=c(0,50))
hist(stderr_vector[,1], main="Histogram for Beta0 S.E.", xlim=c(0,50))
hist(stderr_vector[,2], main="Histogram for Beta1 S.E.", xlim=c(0,1))
hist(stderr_vector[,1], main="Histogram for Beta0 S.E.", xlim=c(0,50), xlab = "S.E Beta0")
hist(stderr_vector[,2], main="Histogram for Beta1 S.E.", xlim=c(0,1), xlab="S.E Beta1")
sd_beta0
advertising = read.csv("./data/Advertising.csv", header = T)
hist(advertising$TV)
hist(advertising$Sales)
sink("./data/eda-output.txt")
cat("Advertising TV Summary Statistics")
summary(advertising$TV)
cat("Advertising Sales Summary Statistics")
summary(advertising$Sales)
sink()
advertising = read.csv("./data/Advertising.csv", header = T)
hist(advertising$TV)
hist(advertising$Sales)
sink("./data/eda-output.txt")
cat("Advertising TV Summary Statistics")
summary(advertising$TV)
cat("Advertising Sales Summary Statistics")
summary(advertising$Sales)
sink()
setwd("/Users/Steven/Desktop/stat159-fall-2016/hws/hw02/")
advertising = read.csv("./data/Advertising.csv", header = T)
hist(advertising$TV)
hist(advertising$Sales)
sink("./data/eda-output.txt")
cat("Advertising TV Summary Statistics")
summary(advertising$TV)
cat("Advertising Sales Summary Statistics")
summary(advertising$Sales)
sink()
setwd("/Users/Steven/Desktop/stat159-fall-2016/hws/hw02/stat159-hw2/")
advertising = read.csv("./data/Advertising.csv", header = T)
hist(advertising$TV)
hist(advertising$Sales)
sink("./data/eda-output.txt")
cat("Advertising TV Summary Statistics")
summary(advertising$TV)
cat("Advertising Sales Summary Statistics")
summary(advertising$Sales)
sink()
advertising = read.csv("./data/Advertising.csv", header = T)
hist(advertising$TV)
hist(advertising$Sales)
sink("./data/eda-output.txt")
cat("Advertising TV Summary Statistics\n")
summary(advertising$TV)
cat("Advertising Sales Summary Statistics\n")
summary(advertising$Sales)
sink()
